// В казино-игре Блэкджек игрок может определить, есть ли у него преимущество перед казино в следующей раздаче,
// отслеживая относительное количество высоких и низких карт, оставшихся в колоде. Это называется подсчетом карт.
//
// Больше высоких карт, оставшихся в колоде, выгодно игроку. Каждой карте присваивается значение
// в соответствии с таблицей ниже. Когда счет положительный, игрок должен делать высокую ставку.
// Когда счет нулевой или отрицательный, игрок должен делать низкую ставку.
//
// Изменение количества	Карты
// +1	2, 3, 4, 5, 6
// 0	7, 8, 9
// -1	10, «Дж», «К», «А», «К»
// Вы напишете функцию подсчета карт. Она будет получать cardпараметр, который может быть числом или строкой,
// и увеличивать или уменьшать глобальную countпеременную в соответствии со значением карты (см. таблицу).
// Затем функция вернет строку с текущим счетом и строку,
// Betесли счет положительный, или Holdесли счет нулевой или отрицательный.
// Текущий счет и решение игрока ( Betили Hold) должны быть разделены одним пробелом.
//
// Примеры выходных данных: -3 Hold или5 Bet
//
// Совет
// НЕ сбрасывайте countна 0, если значение равно 7, 8 или 9.
// НЕ возвращайте массив.
// НЕ включайте кавычки (одинарные или двойные) в вывод.

let count = 0;

function cc(card) {
    switch (card) {
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
            count += 1;
            break;
        case 7:
        case 8:
        case 9:
            count += 0;
            break;
        case 10:
        case 'J':
        case 'Q':
        case 'K':
        case 'A':
            count -= 1;
            break;
    }

    return count > 0 ? count + " Bet" : count + " Hold";
}

// Примеры использования
console.log(cc(2));  // 1 Bet
console.log(cc(3));  // 2 Bet
console.log(cc(7));  // 2 Bet
console.log(cc('K')); // 1 Bet
console.log(cc('A')); // 0 Hold
